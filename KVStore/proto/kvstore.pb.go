// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kvstore.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("kvstore.proto", fileDescriptor_088d7f6aff848d9e) }

var fileDescriptor_088d7f6aff848d9e = []byte{
	// 145 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x2e, 0x2b, 0x2e,
	0xc9, 0x2f, 0x4a, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0xbc, 0xb9,
	0xa9, 0xc5, 0xc5, 0x89, 0xe9, 0x50, 0x51, 0xa3, 0x1b, 0x8c, 0x5c, 0xec, 0xde, 0x61, 0xc1, 0x20,
	0x75, 0x42, 0x0e, 0x5c, 0xec, 0xee, 0xa9, 0x25, 0x3e, 0x99, 0xc5, 0x25, 0x42, 0x12, 0x10, 0x69,
	0xbd, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0xef, 0xb0, 0x60, 0xa8, 0x8c, 0x94, 0x24, 0x5c,
	0xa6, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x15, 0x21, 0xa5, 0xc4, 0x00, 0x32, 0x21, 0x18, 0xa7, 0x09,
	0xc1, 0xb8, 0x4d, 0x08, 0x86, 0x9b, 0xe0, 0xc9, 0xc5, 0xe5, 0x92, 0x9a, 0x93, 0x5a, 0x92, 0x0a,
	0x36, 0x44, 0x1a, 0xc3, 0x10, 0x84, 0xa4, 0x94, 0x0c, 0xa6, 0x39, 0x08, 0x59, 0x25, 0x86, 0x24,
	0x36, 0xb0, 0xb4, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x04, 0x97, 0xa4, 0xee, 0x08, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KVStoreClient is the client API for KVStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KVStoreClient interface {
	GetList(ctx context.Context, in *RequestKVSGetList, opts ...grpc.CallOption) (*ResponseKVSGetList, error)
	SetList(ctx context.Context, in *RequestKVSSetList, opts ...grpc.CallOption) (*ResponseKVSSetList, error)
	DeleteList(ctx context.Context, in *RequestKVSDeleteList, opts ...grpc.CallOption) (*ResponseKVSDeleteList, error)
}

type kVStoreClient struct {
	cc *grpc.ClientConn
}

func NewKVStoreClient(cc *grpc.ClientConn) KVStoreClient {
	return &kVStoreClient{cc}
}

func (c *kVStoreClient) GetList(ctx context.Context, in *RequestKVSGetList, opts ...grpc.CallOption) (*ResponseKVSGetList, error) {
	out := new(ResponseKVSGetList)
	err := c.cc.Invoke(ctx, "/proto.KVStore/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVStoreClient) SetList(ctx context.Context, in *RequestKVSSetList, opts ...grpc.CallOption) (*ResponseKVSSetList, error) {
	out := new(ResponseKVSSetList)
	err := c.cc.Invoke(ctx, "/proto.KVStore/SetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVStoreClient) DeleteList(ctx context.Context, in *RequestKVSDeleteList, opts ...grpc.CallOption) (*ResponseKVSDeleteList, error) {
	out := new(ResponseKVSDeleteList)
	err := c.cc.Invoke(ctx, "/proto.KVStore/DeleteList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KVStoreServer is the server API for KVStore service.
type KVStoreServer interface {
	GetList(context.Context, *RequestKVSGetList) (*ResponseKVSGetList, error)
	SetList(context.Context, *RequestKVSSetList) (*ResponseKVSSetList, error)
	DeleteList(context.Context, *RequestKVSDeleteList) (*ResponseKVSDeleteList, error)
}

// UnimplementedKVStoreServer can be embedded to have forward compatible implementations.
type UnimplementedKVStoreServer struct {
}

func (*UnimplementedKVStoreServer) GetList(ctx context.Context, req *RequestKVSGetList) (*ResponseKVSGetList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetList not implemented")
}
func (*UnimplementedKVStoreServer) SetList(ctx context.Context, req *RequestKVSSetList) (*ResponseKVSSetList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetList not implemented")
}
func (*UnimplementedKVStoreServer) DeleteList(ctx context.Context, req *RequestKVSDeleteList) (*ResponseKVSDeleteList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteList not implemented")
}

func RegisterKVStoreServer(s *grpc.Server, srv KVStoreServer) {
	s.RegisterService(&_KVStore_serviceDesc, srv)
}

func _KVStore_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestKVSGetList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVStoreServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.KVStore/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVStoreServer).GetList(ctx, req.(*RequestKVSGetList))
	}
	return interceptor(ctx, in, info, handler)
}

func _KVStore_SetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestKVSSetList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVStoreServer).SetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.KVStore/SetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVStoreServer).SetList(ctx, req.(*RequestKVSSetList))
	}
	return interceptor(ctx, in, info, handler)
}

func _KVStore_DeleteList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestKVSDeleteList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVStoreServer).DeleteList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.KVStore/DeleteList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVStoreServer).DeleteList(ctx, req.(*RequestKVSDeleteList))
	}
	return interceptor(ctx, in, info, handler)
}

var _KVStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.KVStore",
	HandlerType: (*KVStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetList",
			Handler:    _KVStore_GetList_Handler,
		},
		{
			MethodName: "SetList",
			Handler:    _KVStore_SetList_Handler,
		},
		{
			MethodName: "DeleteList",
			Handler:    _KVStore_DeleteList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kvstore.proto",
}
